%name Calculator
%token_prefix CALC_
%token_type {float}

%parse_accept {
    printf("parsing complete!\n");
}

%parse_failure {
    fprintf(stderr,"Parse failure...\n");
}

%syntax_error {
    fprintf(stderr,"Syntax error...\n");
}

%left PLUS MINUS.
%left MULTIPLY DIVIDE.
%nonassoc L_PAREN R_PAREN.

result(R) ::= expr(A). {
    R = A;
    printf("= %f\n", R);
}
expr(R)   ::= expr(A) PLUS expr(B).       { R = A + B; printf("+"); }
expr(R)   ::= expr(A) MINUS expr(B).      { R = A - B; printf("-"); }
expr(R)   ::= expr(A) MULTIPLY expr(B).   { R = A * B; printf("*"); }
expr(R)   ::= expr(A) DIVIDE expr(B).     { R = A / B; printf("/"); }
expr(R)   ::= L_PAREN expr(A) R_PAREN.    { R = A;     printf("(%f)", R);    }
expr(R)   ::= NUMBER(A).                  { R = A;     printf("%f", R); }
